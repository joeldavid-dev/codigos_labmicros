PROCESSOR 16f877
INCLUDE <p16f877.inc> 
	
	MENOR EQU H'40'
	MAYOR EQU H'41'
	CONTA_POS EQU H'42'
	CONTA_REP EQU H'43'

	ORG 0
	GOTO INICIO 
	ORG 5

INICIO:
	BCF STATUS,RP1		; RP1 = 0
	BSF STATUS,RP0		; RP0 = 1, MUEVE AL BANCO 1
	MOVLW 0X20			; W <-- 0X20
	MOVWF FSR			; MUEVE CONTENIDO DE W A FSR. FSR = 0X20
	MOVFW INDF			; W <-- VALOR EN EL REGISTRO 0X20
	BCF STATUS,RP0		; RP0 = 0, MUEVE AL BANCO 0
	MOVWF MAYOR			; MENOR <-- W
	MOVLW 0X00			; W <-- 0X00
	MOVWF CONTA_POS		; CONTA_POS <-- 0X00
	MOVLW 0X0F			; W <-- 0X0F
	MOVWF CONTA_REP		; CONTA_REP <-- 0X0F

LOOP:
	INCF FSR			; INCREMENTO FSR
	MOVFW MAYOR			; W <-- MAYOR
	SUBWF INDF,W		; W = VALOR EN EL REGISTRO ACTUAL - W
	BTFSS STATUS,C		; SI CARRY = 1, SALTA (COMPARA PARA SABER SI ES MENOR)
	CALL INTERCAMBIA
	MOVFW INDF			; W <-- VALOR ACTUAL (NUEVO MAYOR)
	MOVWF MAYOR			; MAYOR <-- W

	INCF CONTA_POS		; INCREMENTA EL CONTADOR DE POSICION
	MOVFW CONTA_POS		; W <-- CONTA_POS
	SUBWF CONTA_REP,W	; W <-- CONTA_REP - CONTA_POS, PARA SABER SI LLEGO AL TOPE
	
	BTFSS STATUS,Z		; SI Z ES 1, SALTA
	GOTO LOOP			; SI NO, REGRESA A LOOP
	GOTO REINICIO

INTERCAMBIA:
	MOVFW INDF			; W <-- VALOR ACTUAL (NUEVO MENOR)
	MOVWF MENOR			; MENOR <-- W
	DECF FSR			; REGRESA A LA POSICION ANTERIOR
	MOVFW INDF			; W <-- VALOR ACTUAL (NUEVO MAYOR)
	MOVWF MAYOR			; MAYOR <-- W
	MOVFW MENOR			; W <-- MENOR
	MOVWF INDF			; VALOR ACTUAL <-- W
	INCF FSR			; AVANZA DE POSICION
	MOVFW MAYOR			; W <-- MAYOR
	MOVWF INDF			; VALOR ACTUAL <-- W
	RETURN

REINICIO:
	DECF CONTA_REP		; DECREMENTA EL TOPE
	MOVLW 0X20			; W <-- 0X20 (POSICION INICIAL)
	MOVWF FSR			; FSR <-- W
	MOVFW INDF			; W <-- VALOR EN LA POSICION INICIAL
	MOVWF MAYOR			; MAYOR <-- W
	MOVLW 0X00			; W <-- 0X00
	MOVWF CONTA_POS		; CONTA_POS <-- 0X00
	SUBWF CONTA_REP,W	; W <-- CONTA_REP - 0X00 
	BTFSS STATUS,Z		; SI Z ES 1, SALTA
	GOTO LOOP			; NO ES 0

END